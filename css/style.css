* {
  box-sizing: border-box;
}

body {
  margin: 0;
}

html {
  font-size: 16px;
}

/* h2 {
  font-family: 'Montserrat', sans-serif;
  font-weight: bold;
  text-align: center;
  border: 3px solid #0000ff;
  width: 50%;
} */

/* p {
  background-color: #000000;
  color: #ffffff;
} */

/* span {
  font-size: 40px;
  font-family: "Comic Sans MS";
  color: #ffff00;
  text-decoration: underline;
  text-transform: uppercase;
} */

ul {
  font-size: 40px;
  list-style: none;
}

ol {
  font-size: 30px;
  list-style: upper-roman;
  margin-left: 20px;
}

.conteudo {
  margin-left: 1rem;
}

#titulo-principal {
  margin-left: 5rem;
}

/* Explicando Cascade e especificidade */

/* 0 - 2 - 0 */
.titulo.titulo-pagina {
  color: purple;
}

/* 1 - 0 - 0 
Não usar Id no CSS*/
#titulo-principal {
  color: aquamarine;
}

/* 0 - 1 - 0 */
.titulo-pagina {
  font-size: 5rem;
  border: 5px solid red;
  color: red;
  margin-left: 4rem;
}

/*0 - 1 - 0 = quando empatado na especificidade ganha quem está mais abaixo*/
.titulo {
  border-style: dashed;
  margin-left: 0;
  color: green;
}

/* 1 - 0 - 0 - 1 */
h1 {
  color: blue;
  /* color: blue !important; */
}
/*
Regra de especificidade:
1 (peso1000000 - !important) - 0 (peso1000 - Id) - 0 (peso10 - Classe) - 0 (peso1 - Tag)
!important sempre ganha
*/

.titulo-generico {
  font-size: 40px;
  color: red;
}

.container-exemplo > .titulo-generico {
  font-size: 60px;
  color: black;
}

.meu-link {
  font-size: 30px;
  text-decoration: none;
}

/* Ativado quando o mouse está em cima */
.meu-link:hover {
  font-size: 40px;
  background-color: gray;
}

/* neste caso é a cor antes do link ter sido visitado */
.meu-link:link {
  color: green;
}

/* neste caso é a cor do link após ter sido visitado */
.meu-link:visited {
  color: rgb(185, 138, 8);
}

/* Valido ao clicar */
.meu-link:active {
  font-size: 60px;
  color: red;
}

/* Valido ao selecionar o item */
.meu-link:focus {
  font-size: 60px;
  color: purple;
}

.meu-input {
  background-color: gray;
  font-size: 50px;
  color: white;
}

.meu-input:focus {
  background-color: white;
  color: black;
}

.nav-menu {
  border: 2px solid blue;
}

.menu-item {
  border: 2px dashed purple;
  background-color: gray;
  margin-bottom: 20px;
  display: inline-block;
  font-size: 30px;
}

.menu-item:last-child {
  margin-bottom: 0px;
}

.menu-item:first-child {
  color: red;
}

.menu-item:nth-child(3) {
  background-color: green;
}

.menu-item:nth-child(n + 2) {
  font-weight: bold;
}

.meu-input[type="number"] {
  font-size: 80px;
  background-color: red;
}

.bloco-inicial {
  font-size: 50px;
  background-color: orange;
  margin-bottom: 20px;
  display: block;
  width: 600px;
}

.span-inicial {
  font-size: 40px;
  font-family: "Arial, sans-serif";
  color: yellow;
  text-decoration: underline;
  text-transform: uppercase;
  /*display: inline; /* por padrão span é inline */
  display: inline-block;
  width: 150px; /* ignorado por elemento inline */
  height: 50px; /* ignorado por elemento inline */
  margin-top: 50px; /* ignorado por elemento inline */
  margin-left: 40px; /* ignorado por elemento inline */
  background-color: gray;
}

.bloco-escondido {
  display: none;
}

/*
elementos default block
sempre vão quebrar uma linha ao final
div
p
li
*/

/*
elementos default inline
-span
-a
-strong
-em
Não recebe botton heim top
*/

.box {
  background-color: #0000ff;
  width: 100px;
  /* height: 100px; Eviar o uso de height ao máximo */
  /* border: 10px solid green; */
  border-top: 10px solid green;
  border-bottom: 10px dashed green;

  /*
  padding: 10px;
  padding-top: 10px;
  padding-bottom: 10px;
  padding-left: 10px;
  padding-right: 10px;
  
  padding: 20px 30px;
  padding-top: 20px;
  padding-bottom: 20px;
  padding-left: 30px;
  padding-right: 30px;
  
  padding: 10px 20px 30px 40px;
  padding-top: 10px;
  padding-bottom: 20px;
  padding-left: 30px;
  padding-right: 40px;
  */

  padding: 10px;
  margin: 10px;
}

/*
box-sizing: border-box; respeita o tamanho do box colocando padding e boder para dentro
box-sizing: content-box; mantem o width e height e soma as margens
*/

.wrapper {
  display: block; /* DIV é diplay block por padrão */
  background-color: gray;
  font-size: 1.5rem;
  width: 40rem;
  margin: 0 auto;
}

.wrapper::after {
  content: "";
  display: table;
  clear: both;
}

.wrapper p {
  margin-top: 0;
}

.wrapper .imagem-principal-fl {
  float: left;
  /* border: 3px solid magenta; */
  /* margin-right: 10px; */
  /* margin-bottom: 10px; */
  margin: 0 20px 10px 0;
}

/* .wrapper .p-clear {
  clear: both;
} */

.wrapper .imagem-principal-fr {
  float: right;
}

.wrapper-2 {
  background-color: rgb(202, 172, 132);
  font-size: 1.5rem;
  width: 56rem;
  margin: 20px auto;
}

.wrapper-2::after {
  content: "";
  display: table;
  clear: both;
}

.box-1 {
  width: 33%;
  height: 200px;
}

.red {
  background-color: red;
  float: right;
}

.blue {
  background-color: blue;
  float: right;
}

.green {
  background-color: green;
  float: right;
}

.wrapper-3 {
  background-color: rgb(202, 172, 132);
  font-size: 1.5rem;
  width: 56rem;
  margin: 20px auto;
}

.wrapper-3::after {
  content: "";
  display: table;
  clear: both;
}

.servico {
  width: 31%;
  border: 1px solid blue;
  float: left;
  min-height: 200px;
  margin: 0 1%;
  padding: 0 1%;
}

.wrapper-4 {
  border: 5px solid blue;
  padding: 20px;
  margin-top: 40px;
  position: relative;
}

.filho {
  position: absolute;
  /* 
  relative = block
  absolute = inline-block relação com o parente se tiver relative se não vai buscar o relative acima mesmo que tenha que ir até o body
  fixed = sempre fixo a partir do começo da tela
  position passa a controlar as properts
  top
  left
  right
  botton
   */
  background-color: red;
  padding: 20px;
  top: 20px;
}

.wrapper-5 {
  width: 50%;
}

.resizable-image {
  max-width: 100%;
  height: auto;
}

@media (max-width: 1024px) {
  body {
    background-color: red;
  }
}

@media (max-width: 760px) {
  body {
    background-color: #0000ff;
  }
}

@media (max-width: 480px) {
  body {
    background-color: green;
  }
}